---
layout:     post
title:      "Android 双卡之数据库分析"
subtitle:   "\"android DualSim(2)\""
date:       2016-04-09 14:00:00
author:     "石云飞"
header-img: "img/sim_sql/sim_sql.jpg"
catalog: true
tags:
    - 生活
---





> "How should i greet thee?"

> "With silence and tears."

---

## 引言

双卡手机由于存在两张卡，判断电话短信等数据都需要确定是来自哪张卡。

Android 官方在5.0中提供了双卡适配[api](https://developer.android.com/reference/android/telephony/SubscriptionManager.html#getActiveSubscriptionInfoList%28%29)

对比可发现，google官方的方案与MTK方案非常相似，有兴趣的同学可以直接查看MTK方案。




---

## 1.双卡数据库

我们对系统数据库进行分析，可根据ContentProvider找到双卡相关字段，一般情况下，卡一为0，卡二为1.
ps:分析之前需保证数据库干净不受污染，另外需卸载第三方拨号和短信程序。
我这里的手机是已root过的，可以直接通过sqlLite对数据库进行查看：
短信、彩信数据库位置：

/data/data/com.android.providers.telephony/mmssms.db

电话数据库位置：

data/data/data/com.android.providers.contacts/contacts2.db
<a href="{{ site.baseurl }}/img/19.png">
    <img src="{{ site.baseurl }}/img/19.png" alt="Post Sample Image">
</a>

## 1.常见双卡适配类型

---

1.新增标识字段
常见于：三星、moto等

举例：手机的短信数据库
<a href="{{ site.baseurl }}/img/31.png">
    <img src="{{ site.baseurl }}/img/31.png" alt="Post Sample Image">
</a>

通过上图，我们可以知道短信数据库表中：

标识双卡的字段名：sim_id，字段的值：卡0—-0 || 卡1—-1

这种情况相对简单，在做短信、电话相关的APP只需要：

（1）确定对应的卡槽

（2）需要数据库操作时，增加一列对于双卡标识字段的操作
<a href="{{ site.baseurl }}/img/41.png">
    <img src="{{ site.baseurl }}/img/41.png" alt="Post Sample Image">
</a>

---

## 2.mtk系列芯片新增siminfo表

常见于mtk系列芯片的手机

现象：

按照1中的方法找到了区分卡槽的字段和值，发现当用户换卡时，标识字段对应的值会随着变化，每换一张新卡，对应的simId值+1。

问题原因：

如下图所显示，这类手机新建了一张表，用来记录SIM卡的信息。对应的uri为：Uri uri = Uri.parse(“content://telephony/siminfo”);

解释：

slot字段值为0：主卡

slot字段值为1：副卡

slot字段值为-1：此卡没有安装在卡槽

---


<a href="{{ site.baseurl }}/img/52.png">
    <img src="{{ site.baseurl }}/img/52.png" alt="Post Sample Image">
</a>

---


如下图，sms表和siminfo表的映射关系。sms表中的simId字段存储的是siminfo表中对应的_id，siminfo中对应的0，1是卡槽的标识。

注意：siminfo表是系统维护的，第三方APP只需读取，不需要进行“写”操作。

---

<a href="{{ site.baseurl }}/img/71.png">
    <img src="{{ site.baseurl }}/img/71.png" alt="Post Sample Image">
</a>

---

解决办法：

（1）确立映射关系

在一定的触发时机（应用启动，监听iteminfo数据库信息变化），触发iteminfo表的查询，将查询结果建立成映射关系。

0—-4

1—-3

（2）需要操作时根据卡槽获得映射值写入db

<a href="{{ site.baseurl }}/img/661.png">
    <img src="{{ site.baseurl }}/img/661.png" alt="Post Sample Image">
</a>

mtk在双卡双待方面的积累是很深厚长久的，在功能机时代就有非常广泛的应用。那么为什么还要如此麻烦的新建一张表来做这个映射呢？为什么不使用方案1 简单的处理呢？

场景：

使用1中数据库新增字段的方法，对于WCDMA联通定制机（同时G卡制式），如果用户将两张卡对调位置，将会发生什么情况？

在方案1中，所有的信息直接和sms表中的双卡标识字段绑定，如果换卡的话将无法判断信息来自那个SIM卡，在上述的场景发生时，用户所有的信息和SIM卡发生混乱。

在方案2中，因为sms和siminfo存在映射关系，siminfo表中的icc_id可以唯一标识一张SIM卡，不会发生方案1中出现的换卡可能造成的信息错乱问题。

思考总结：

方案2的存在是合理的，因为方案1同时存在缺陷。

---


## 3. coolpad系列手机新增iteminfo表

常见于：酷派系列手机，有以下特点：

（1）每次在sms表插入一条数据，iteminfo会对应的增加一条记录，这个是由系统provider自动完成的。

（2）需要更新iteminfo中的数据中的network_type字段值来标识卡槽。

类似情况可进行数据库查询，找出标识字段，即可有针对性地适配！



---


<a href="{{ site.baseurl }}/img/sim_sql/sim_sql_end.jpg">
    <img src="{{ site.baseurl }}/img/sim_sql/sim_sql_end.jpg" alt="Post Sample Image">
</a>

---


如果你恰好逛到了这里，希望你也能喜欢这个博客主题。

—— SYF 后记于 2016.9.30


